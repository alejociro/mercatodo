<?php

namespace Tests\Feature\Admin\Users;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Http\UploadedFile;
use Illuminate\Support\Arr;
use Illuminate\Support\Str;
use Tests\TestCase;

class StoreUserTest extends TestCase
{
    use RefreshDatabase;
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->artisan('db:seed --class=PermissionsSeeder');
    }

    public function test_it_can_stores_a_new_user(): void
    {
        $data = $this->userData();
        $user = User::factory()->create()->givePermissionTo('create-user');
        $response = $this->actingAs($user)->post(route('users.store'), $data);
        $response->assertRedirect();
        $this->assertDatabaseHas('users', Arr::only($data, ['name','email']));
    }

    private function userData(): array
    {
        return [
            'name' => 'julian',
            'surname' => 'Castrillon',
            'email' => 'julian@test.com',
            'document' => '1000748309',
            'phone' => '3114277390',
            'password' => '12345678',
            'confirm-password' => '12345678',
        ];
    }
//
//    /**
//     * @param array $data
//     * @param string $field
//     * @return void
//     * @dataProvider invalidDataProvider
//     */
//    public function test_it_validates_store_user_request(array $data, string $field)
//    {
//
//        $response = $this->post('/users', $data);
//
//        $response->assertSessionHasErrors($field);
//    }
//
//    public function invalid_Data_Provider(): array
//    {
//        return [
//            'validate rule name required' => [
//                'data' => array_replace(
//                    $this->userData(),
//                    ['name' => null]
//                ),
//                'field' => 'name'
//            ]
//        ];
//    }
}
