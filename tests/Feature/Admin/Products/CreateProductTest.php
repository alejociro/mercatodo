<?php

namespace Tests\Feature\Products;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class CreateProductTest extends TestCase
{
    use RefreshDatabase;
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->artisan('db:seed --class=PermissionsSeeder');
    }

    public function test_it_can_access_to_the_creation_route(): void
    {
        $user = User::factory()->create()->givePermissionTo('create-product');
        $response = $this->actingAs($user)->get(route('admin.products.create'));
        $response->assertStatus(200);
    }

    public function test_it_displays_a_product_creation_form(): void
    {
        $user = User::factory()->create();
        $user->givePermissionTo('create-product');

        $response = $this->actingAs($user)->get(route('admin.products.create'));

        $response->assertSee(trans('admin.products.titles.create a product'));
        $response->assertSee(trans('admin.products.fields.name'));
        $response->assertSee(trans('admin.products.fields.price'));
        $response->assertSee(trans('admin.products.fields.stock'));
        $response->assertSee(trans('admin.products.fields.description'));
        $response->assertSee(trans('admin.products.fields.upload image'));
        $response->assertSee(trans('admin.products.fields.select image'));
        $response->assertSee(trans('admin.products.fields.cancel'));
        $response->assertSee(trans('admin.products.fields.save'));
    }
}
