<?php

namespace Tests\Feature\Admin\Roles;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Spatie\Permission\Models\Permission;
use Spatie\Permission\Models\Role;
use Tests\TestCase;

class UpdateRoleTest extends TestCase
{
    use RefreshDatabase;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->artisan('db:seed --class=PermissionsSeeder');
    }

    public function test_it_can_update_a_user(): void
    {
        $request = [
            'name' => 'admincito',
        ];

        $role = Role::create(['name' => 'writer']);
        $permission = Permission::create(['name' => 'edit articles']);
        $role->givePermissionTo($permission);
        $permission->assignRole($role);

        $user = User::factory()->create()->givePermissionTo('edit-rol');

        $response = $this->actingAs($user)->patch(route('admin.roles.update', $role->id), $request);
        $response->assertRedirect();

        $role = $role->refresh();
        $this->assertEquals($request['name'], $role->name);
    }
}
